name: Deploy Next.js App to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18.x   # ← まずは安定の 18 に
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build (Next.js standalone)
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: "https://app-002-gen10-step3-1-py-oshima42.azurewebsites.net"

      # ---- リリース用ディレクトリに必要物を集約 ----
      - name: Assemble release folder
        run: |
          rm -rf release
          mkdir -p release
          # 1) standalone 本体（server.js など）をコピー
          cp -R .next/standalone/* release/
          # 2) 静的チャンクを server.js と同階層の .next/ 配下へ
          mkdir -p release/.next
          cp -R .next/static release/.next/static
          # 3) public があれば（画像/アイコン等）
          if [ -d "public" ]; then cp -R public release/public; fi

      # ---- 中身を確認（デバッグ用・必要なら消してOK）----
      - name: Inspect release contents
        run: |
          echo "== release root =="
          ls -la release | sed -n '1,120p'
          echo "== release/.next =="
          ls -la release/.next | sed -n '1,120p'
          echo "== release/.next/static/chunks (一部) =="
          ls -la release/.next/static/chunks | sed -n '1,120p' || true

      - name: Zip artifact
        run: |
          cd release
          zip -r ../deployment.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: app-002-gen10-step3-1-node-oshima42
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./deployment.zip
          enable-oryx-build: false
