name: Build and Deploy Next.js App to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 'Install dependencies'
        run: npm ci

      - name: 'Build the application'
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: |
          echo "=========================================="
          echo "Building with API URL: $NEXT_PUBLIC_API_URL"
          echo "=========================================="
          npm run build
          
          echo "Checking build output..."
          ls -la .next/
          
          if [ -f .next/standalone/server.js ]; then
            echo "✓ server.js generated successfully"
          else
            echo "✗ ERROR: server.js not found in .next/standalone/"
            ls -la .next/standalone/ || echo "standalone directory does not exist"
            exit 1
          fi

      - name: 'Prepare deployment package'
        run: |
          echo "Creating release directory..."
          mkdir -p release
          
          # standaloneの内容を全てコピー
          echo "Copying standalone build..."
          if [ -d .next/standalone ]; then
            cp -r .next/standalone/. release/
            echo "✓ Standalone files copied"
          else
            echo "✗ ERROR: .next/standalone directory not found!"
            echo "Available .next contents:"
            ls -la .next/
            exit 1
          fi
          
          # staticファイルをコピー
          echo "Copying static files..."
          if [ -d .next/static ]; then
            mkdir -p release/.next/static
            cp -r .next/static/. release/.next/static/
            echo "✓ Static files copied"
          else
            echo "✗ WARNING: .next/static not found"
          fi
          
          # publicフォルダをコピー
          echo "Copying public directory..."
          if [ -d public ]; then
            cp -r public release/
            echo "✓ Public directory copied"
          else
            echo "✗ WARNING: public directory not found"
          fi
          
          # package.jsonをコピー
          echo "Copying package.json..."
          cp package.json release/
          
          # node_modulesの生成（standaloneに含まれない場合）
          cd release
          if [ ! -d node_modules ]; then
            echo "Installing production dependencies..."
            npm ci --production
          fi
          cd ..
          
          # 構成確認
          echo "Release directory structure:"
          ls -laR release/ | head -100
          
          # 重要ファイルの確認
          echo ""
          echo "Checking critical files:"
          if [ -f release/server.js ]; then
            echo "✓ server.js found"
            head -5 release/server.js
          else
            echo "✗ ERROR: server.js not found!"
            exit 1
          fi
          
          if [ -f release/package.json ]; then
            echo "✓ package.json found"
          else
            echo "✗ ERROR: package.json not found!"
          fi

      - name: 'Upload artifact for deployment job'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Download artifact from build job'
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./release

      - name: 'Verify artifact contents'
        run: |
          echo "Artifact contents:"
          ls -la release/
          if [ -f release/server.js ]; then
            echo "✓ server.js present in artifact"
          else
            echo "✗ ERROR: server.js missing in artifact"
            exit 1
          fi

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-002-gen10-step3-1-node-oshima42'
          package: ./release
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
