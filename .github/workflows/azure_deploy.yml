name: Build and Deploy Next.js App to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@v4

      # Node.jsのセットアップにキャッシュを追加して高速化
      - name: 'Set up Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: 'Install dependencies'
        run: npm install

      - name: 'Build the application'
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: npm run build

      # --- デプロイ用ファイルのアセンブル ---
      # Next.jsのスタンドアロン出力と静的アセットを 'release' フォルダにまとめる
      - name: 'Assemble artifact for deployment'
        run: |
          mkdir release
          cp -r ./.next/standalone/. ./release
          cp -r ./.next/static ./release/.next/static
          cp -r ./public ./release/public

      # zipせずにフォルダをそのままアップロード
      - name: 'Upload artifact for deployment job'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./release # releaseフォルダを直接指定

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # フォルダとしてアーティファクトをダウンロード
      - name: 'Download artifact from build job'
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./release # カレントディレクトリにreleaseフォルダとして展開

      # unzipステップは不要

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-002-gen10-step3-1-node-oshima42'
          package: ./release # ダウンロードしたreleaseフォルダをそのままデプロイ
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          startup-command: 'node server.js'