name: 'Build and Deploy Next.js App to Azure'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # キャッシュの設定
      - name: 'Cache dependencies'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 完全クリーンビルド
      - name: 'Force clean all caches'
        run: |
          echo "Removing all build artifacts and caches..."
          rm -rf .next
          rm -rf node_modules
          rm -rf release
          rm -rf .npm
          rm -rf ~/.npm
          echo "Clean complete."

      - name: 'Install dependencies'
        run: npm ci --prefer-offline

      # ソースコードスキャン
      - name: '🔍 [DIAGNOSTIC] Scan source code for wrong URL'
        run: |
          echo "Scanning for hardcoded 'gy-oshima42' string in source code..."
          if grep -r "gy-oshima42" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=.next; then
            echo "🔥 WARNING: Found the wrong URL hardcoded in the source code above."
          else
            echo "✅ OK: Wrong URL not found in source code."
          fi
        continue-on-error: true

      # ビルド（環境変数を明示的に設定）
      - name: 'Build the application'
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NODE_ENV: production
        run: |
          echo "=========================================="
          echo "Building with API URL: ${NEXT_PUBLIC_API_URL}"
          echo "Node Environment: ${NODE_ENV}"
          echo "=========================================="
          npm run build

      # デプロイパッケージの準備
      - name: 'Prepare deployment package'
        run: |
          echo "Creating deployment package from standalone output..."
          mkdir -p release
          
          if [ -d .next/standalone ]; then
            cp -r .next/standalone/. release/
            echo "✓ Copied standalone directory contents to ./release"
          else
            echo "✗ ERROR: .next/standalone directory not found!"
            exit 1
          fi

          if [ -d public ]; then
            cp -r public release/public
            echo "✓ Copied public directory to ./release/public"
          fi
          
          if [ -d .next/static ]; then
            cp -r .next/static release/.next/static
            echo "✓ Copied static files to ./release/.next/static"
          fi

      # ビルド成果物のスキャン
      - name: '🔍 [DIAGNOSTIC] Scan FINAL build artifacts for wrong URL'
        run: |
          echo "Scanning the final packaged files in ./release for the wrong URL..."
          if grep -r "gy-oshima42" ./release --exclude-dir=node_modules; then
            echo "🔥🔥🔥 CRITICAL: The WRONG URL was found in the final build files!"
            echo "This means the build process itself is using the wrong value, despite the secret."
            echo "Files containing 'gy-oshima42':"
            grep -rl "gy-oshima42" ./release --exclude-dir=node_modules || true
          else
            echo "✅✅✅ OK: The wrong URL was NOT found in the final build files."
          fi
        continue-on-error: true

      # 環境変数の最終確認
      - name: '🔍 [DIAGNOSTIC] Verify environment variables'
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: |
          echo "=========================================="
          echo "Final verification of environment variables:"
          echo "NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}"
          echo "Length: ${#NEXT_PUBLIC_API_URL} characters"
          echo "=========================================="

      - name: 'Upload artifact for deployment job'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: 'Download artifact from build job'
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./release
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-002-gen10-step3-1-node-oshima42'
          package: ./release
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          clean: true
          
      - name: '✅ Deployment complete'
        run: |
          echo "=========================================="
          echo "Deployment completed successfully!"
          echo "App URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          echo "=========================================="
